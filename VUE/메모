VUE 정리 

~ Ch02-5

1. 
    // 함수 선언식
    function fnSayhello(){
        console.log("안녕하세요.");
    }

    // 함수 표현식 
    const fnMinus = function(pNum1, pNum2){
        return pNum1 - pNum2;
    }

2.
    // 변수 종류
    let: 값 변경 가능, 블록 영향 O
    const: 선언과 동시에 값 할당, 값 변경 불가, 블록 영향 O
    var: 값 변경 가능, 블록 영향 X

3.
    //콘솔에 찍어볼 수 있음
    // 역 따옴표 `로 묶은 문자열은 템플릿 리터럴
    let = 3;
    console.log(`a: ${a}`); 

4.
    // 화살표 함수 
    const fnPlusNumbers = (pNum1, pNum2) => {
        return pNum1 + pNum2;
    }

    // return 키워드 생략
    const fnPlusNumbers = (pNum1, pNum2) => num1 + num2;

    // 매개변수 1개일 때 소괄호 생략 가능 
    const fnPlusNumbers = pNum1 => pNum1 + 1;

    // 매개변수 없을 때 반드시 소괄호 사용
    const fnSayhello = () => '안녕하세요';

5. 
    // 타이머 함수
    setTimeOut(function, milliseconds)
    // function: 타이머가 종료된 후 실행될 함수 전달
    // milliseconds: 타이머가 동작할 시간 설정(단위: ms)

Ch02-6
JSON 과 Fetch API
    
    // JSON
        let myObj = {"name": "육수창", "age": "35", "email": "redialfrom@daum.net"};

        // JSON 값을 자바스크립트에서 관리하려면 텍스트로 변환 
        strJSON = JSON.stringify(myObj)
        console.log(strJSON);
        // 자바스크립트 객체를 JSON 데이터로 변경
        newObj = JSON.parse(strJSON)
        console.log(myObj);

    // Fetch API
        fetch(path)
        // path: 데이터 읽을 주소
        // 반환값: 서버가 응답하는 값을 Promise 객체로 반환
        

Ch02-7
    Promise와 비동기 처리 방식 
    